{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Icon } from '@progress/kendo-react-common';\nimport { getChildrenPosition } from '../utils/misc';\n/**\n * @hidden\n */\nexport var downArrowName = 'caret-alt-down';\n/**\n * @hidden\n */\nexport var rightArrowName = 'caret-alt-right';\n/**\n * @hidden\n */\nexport var leftArrowName = 'caret-alt-left';\nvar MenuItemArrow = /** @class */function (_super) {\n  __extends(MenuItemArrow, _super);\n  function MenuItemArrow() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @hidden\n   */\n  MenuItemArrow.prototype.render = function () {\n    return React.createElement(Icon, {\n      className: 'k-menu-expand-arrow',\n      name: this.getIconName()\n    });\n  };\n  MenuItemArrow.prototype.getIconName = function () {\n    var childrenPosition = getChildrenPosition(this.props.itemId, this.props.verticalMenu === true, this.props.dir === 'rtl');\n    switch (childrenPosition) {\n      case 'downward':\n        return downArrowName;\n      case 'rightward':\n        return rightArrowName;\n      case 'leftward':\n        return leftArrowName;\n      default:\n        return undefined;\n    }\n  };\n  /**\n   * @hidden\n   */\n  MenuItemArrow.propTypes = {\n    itemId: PropTypes.string,\n    dir: PropTypes.string,\n    verticalMenu: PropTypes.bool\n  };\n  return MenuItemArrow;\n}(React.Component);\nexport { MenuItemArrow };","map":null,"metadata":{},"sourceType":"module"}