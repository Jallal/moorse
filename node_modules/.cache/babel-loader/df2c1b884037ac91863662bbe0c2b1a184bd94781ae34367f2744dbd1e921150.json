{"ast":null,"code":"import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './Node.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\nclass YAMLSeq extends Collection {\n  static get tagName() {\n    return 'tag:yaml.org,2002:seq';\n  }\n  constructor(schema) {\n    super(SEQ, schema);\n    this.items = [];\n  }\n  add(value) {\n    this.items.push(value);\n  }\n  /**\n   * Removes a value from the collection.\n   *\n   * `key` must contain a representation of an integer for this to succeed.\n   * It may be wrapped in a `Scalar`.\n   *\n   * @returns `true` if the item was found and removed.\n   */\n  delete(key) {\n    const idx = asItemIndex(key);\n    if (typeof idx !== 'number') return false;\n    const del = this.items.splice(idx, 1);\n    return del.length > 0;\n  }\n  get(key, keepScalar) {\n    const idx = asItemIndex(key);\n    if (typeof idx !== 'number') return undefined;\n    const it = this.items[idx];\n    return !keepScalar && isScalar(it) ? it.value : it;\n  }\n  /**\n   * Checks if the collection includes a value with the key `key`.\n   *\n   * `key` must contain a representation of an integer for this to succeed.\n   * It may be wrapped in a `Scalar`.\n   */\n  has(key) {\n    const idx = asItemIndex(key);\n    return typeof idx === 'number' && idx < this.items.length;\n  }\n  /**\n   * Sets a value in this collection. For `!!set`, `value` needs to be a\n   * boolean to add/remove the item from the set.\n   *\n   * If `key` does not contain a representation of an integer, this will throw.\n   * It may be wrapped in a `Scalar`.\n   */\n  set(key, value) {\n    const idx = asItemIndex(key);\n    if (typeof idx !== 'number') throw new Error(`Expected a valid index, not ${key}.`);\n    const prev = this.items[idx];\n    if (isScalar(prev) && isScalarValue(value)) prev.value = value;else this.items[idx] = value;\n  }\n  toJSON(_, ctx) {\n    const seq = [];\n    if (ctx?.onCreate) ctx.onCreate(seq);\n    let i = 0;\n    for (const item of this.items) seq.push(toJS(item, String(i++), ctx));\n    return seq;\n  }\n  toString(ctx, onComment, onChompKeep) {\n    if (!ctx) return JSON.stringify(this);\n    return stringifyCollection(this, ctx, {\n      blockItemPrefix: '- ',\n      flowChars: {\n        start: '[',\n        end: ']'\n      },\n      itemIndent: (ctx.indent || '') + '  ',\n      onChompKeep,\n      onComment\n    });\n  }\n}\nfunction asItemIndex(key) {\n  let idx = isScalar(key) ? key.value : key;\n  if (idx && typeof idx === 'string') idx = Number(idx);\n  return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0 ? idx : null;\n}\nexport { YAMLSeq };","map":{"version":3,"names":["stringifyCollection","Collection","SEQ","isScalar","isScalarValue","toJS","YAMLSeq","tagName","constructor","schema","items","add","value","push","delete","key","idx","asItemIndex","del","splice","length","get","keepScalar","undefined","it","has","set","Error","prev","toJSON","_","ctx","seq","onCreate","i","item","String","toString","onComment","onChompKeep","JSON","stringify","blockItemPrefix","flowChars","start","end","itemIndent","indent","Number","isInteger"],"sources":["/Users/jhazzatgmail.com/Documents/moorseapp/node_modules/yaml/browser/dist/nodes/YAMLSeq.js"],"sourcesContent":["import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './Node.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}