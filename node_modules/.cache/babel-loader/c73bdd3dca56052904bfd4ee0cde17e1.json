{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { classNames } from '@progress/kendo-react-common';\nimport { cardType } from './interfaces/Enums';\nimport { cardOrientation } from './interfaces/Enums';\nimport { validatePackage } from '@progress/kendo-react-common';\nimport { packageMetadata } from '../package-metadata';\nexport var Card = React.forwardRef(function (props, ref) {\n  var _a;\n  validatePackage(packageMetadata);\n  var children = props.children,\n    dir = props.dir,\n    style = props.style,\n    className = props.className,\n    type = props.type,\n    orientation = props.orientation,\n    customProps = __rest(props, [\"children\", \"dir\", \"style\", \"className\", \"type\", \"orientation\"]);\n  var target = React.useRef(null);\n  var chipRef = React.useRef(null);\n  React.useImperativeHandle(target, function () {\n    return {\n      element: chipRef.current,\n      props: props\n    };\n  });\n  React.useImperativeHandle(ref, function () {\n    return target.current;\n  });\n  return React.createElement(\"div\", __assign({\n    dir: dir,\n    style: style,\n    ref: chipRef,\n    className: classNames('k-card', className, (_a = {}, _a[\"k-card-\".concat(type)] = type !== cardType.DEFAULT, _a), orientation !== cardOrientation.HORIZONTAL ? 'k-card-vertical' : 'k-card-horizontal')\n  }, customProps), children);\n});\nCard.displayName = 'KendoReactCard';\nCard.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  dir: PropTypes.string,\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  style: PropTypes.object,\n  type: PropTypes.oneOf(['default', 'primary', 'info', 'success', 'warning', 'error'])\n};\nCard.defaultProps = {\n  type: cardType.DEFAULT,\n  orientation: cardOrientation.VERTICAL\n};","map":null,"metadata":{},"sourceType":"module"}