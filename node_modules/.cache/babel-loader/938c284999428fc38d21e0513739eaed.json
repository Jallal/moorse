{"ast":null,"code":"import { LABEL_DECIMALS, MIN_RATIO } from './constants';\n/**\n * @hidden\n */\nexport var truncateNumber = function truncateNumber(value) {\n  var numberParts = value.toString().split('.');\n  return numberParts.length === 1 ? \"\".concat(numberParts[0]) : \"\".concat(numberParts[0], \".\").concat(numberParts[1].substr(0, LABEL_DECIMALS));\n};\n/**\n * @hidden\n */\nexport var calculatePercentage = function calculatePercentage(min, max, value) {\n  var onePercent = Math.abs((max - min) / 100);\n  return Math.abs((value - min) / onePercent);\n};\n/**\n * @hidden\n */\nexport var updateProgress = function updateProgress(progressRef, progressWrapRef, percentage, isVertical) {\n  var progressPercentage = Math.max(percentage, 0.01);\n  var progressWrapPercentage = 100 / progressPercentage * 100;\n  if (progressRef.current && progressWrapRef.current) {\n    progressRef.current.style.width = !isVertical ? \"\".concat(progressPercentage, \"%\") : '100%';\n    progressWrapRef.current.style.width = !isVertical ? \"\".concat(progressWrapPercentage, \"%\") : '100%';\n    progressRef.current.style.height = isVertical ? \"\".concat(progressPercentage, \"%\") : '100%';\n    progressWrapRef.current.style.height = isVertical ? \"\".concat(progressWrapPercentage, \"%\") : '100%';\n  }\n};\n/**\n * @hidden\n */\nexport var calculateRatio = function calculateRatio(min, max, value) {\n  return Math.max((value - min) / (max - min), MIN_RATIO);\n};","map":null,"metadata":{},"sourceType":"module"}