{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Fade } from '@progress/kendo-react-animation';\nimport { classNames, guid } from '@progress/kendo-react-common';\nvar TabStripContent = /** @class */function (_super) {\n  __extends(TabStripContent, _super);\n  function TabStripContent() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.contentId = guid();\n    _this.childFactory = function (child) {\n      return React.cloneElement(child, __assign(__assign({}, child.props), {\n        in: child.props.children.props.id === String(_this.contentId + _this.props.selected)\n      }));\n    };\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n  TabStripContent.prototype.render = function () {\n    var _a = this.props,\n      children = _a.children,\n      selected = _a.selected;\n    var selectedTab = children && typeof selected === 'number' && React.Children.toArray(children)[selected];\n    var contentClasses = classNames('k-content', 'k-active', selectedTab && selectedTab.props.contentClassName);\n    return React.createElement(\"div\", {\n      className: contentClasses,\n      style: this.props.style\n    }, this.renderContent(children));\n  };\n  TabStripContent.prototype.renderContent = function (children) {\n    var _this = this;\n    return !this.props.keepTabsMounted ? this.renderChild(React.Children.toArray(children)[this.props.selected], this.props.selected) : React.Children.map(this.props.children, function (tab, idx) {\n      return _this.renderChild(tab, idx);\n    });\n  };\n  TabStripContent.prototype.renderChild = function (tab, idx) {\n    var visible = idx === this.props.selected;\n    var contentProps = {\n      'role': 'tabpanel',\n      'aria-expanded': true,\n      'aria-labelledby': idx.toString(),\n      'style': {\n        'display': visible ? undefined : 'none'\n      }\n    };\n    var animationStyle = {\n      position: 'initial',\n      display: visible ? undefined : 'none'\n    };\n    if (tab.props.disabled) {\n      return null;\n    }\n    return this.props.animation ? React.createElement(Fade, {\n      appear: true,\n      exit: this.props.keepTabsMounted,\n      style: animationStyle,\n      childFactory: this.props.keepTabsMounted ? this.childFactory : undefined\n    }, React.createElement(\"div\", __assign({}, contentProps, {\n      id: String(this.contentId + idx),\n      key: idx\n    }), tab.props.children)) : React.createElement(\"div\", __assign({}, contentProps, {\n      key: idx\n    }), tab.props.children);\n  };\n  /**\n   * @hidden\n   */\n  TabStripContent.propTypes = {\n    animation: PropTypes.bool,\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n    selected: PropTypes.number,\n    style: PropTypes.object\n  };\n  return TabStripContent;\n}(React.Component);\nexport { TabStripContent };","map":null,"metadata":{},"sourceType":"module"}